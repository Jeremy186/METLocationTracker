@model MapsProposal.Models.Location

@{
    ViewBag.Title = Model.Name;
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.VegetationCover)
    @Html.HiddenFor(model => model.LandUse)
    @Html.HiddenFor(model => model.Forestry)
    @Html.HiddenFor(model => model.Influx)
    @Html.HiddenFor(model => model.SocialInfrastructure)
    @Html.HiddenFor(model => model.SettlementSize)
    @Html.HiddenFor(model => model.Water)
    @Html.HiddenFor(model => model.Area)
    @Html.HiddenFor(model => model.Height)
}
<div id="map"></div>
<div id="save">
    <table>
        <tr>
            <td id="latlabel" style="height: 40px">&nbsp;Latitude&nbsp;</td>
            <td id="lat">@Model.Latitude</td>
            <td id="lnglabel">&nbsp;Longitude&nbsp;</td>
            <td id="lng">@Model.Longitude</td>

        </tr>
    </table>
</div>
@*
        <p>
            @Html.ActionLink("Edit", "Edit", new { id = Model.ID }) |
    </p>
*@
<script>
    $(document).ready(function () {
        $('#VegetationCover').val(false);
        $('#LandUse').val(false);
        $('#Forestry').val(false);
        $('#Influx').val(false);
        $('#SocialInfrastructure').val(false);
        $('#SettlementSize').val(false);
        $('#Water').val(false);
        $('#Area').val(false);
        $('#Height').val(false);
    })

    var checkboxesTable = '<table id="checkboxesForm"><tr><th colspan="3">Environmental</th><th colspan="3">Social</th><th colspan="3">Tailings</th></tr><tr><td><input type="checkbox" class="checkForm" onclick="fillHiddenBoolFor(\'VegetationCover\')"> Vegetation Cover</td><td><input type="checkbox" class="checkForm" onclick="fillHiddenBoolFor(\'LandUse\')"> Land Use</td><td class="groupend"><input type="checkbox" class="checkForm" onclick="fillHiddenBoolFor(\'Forestry\')"> Forestry&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><input type="checkbox" class="checkForm" onclick="fillHiddenBoolFor(\'Influx\')"> Influx</td><td><input type="checkbox" class="checkForm" onclick="fillHiddenBoolFor(\'SocialInfrastructure\')"> Social Infrastructure</td><td class="groupend"><input type="checkbox" class="checkForm" onclick="fillHiddenBoolFor(\'SettlementSize\')"> Settlement Size&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><input type="checkbox" class="checkForm" onclick="fillHiddenBoolFor(\'Water\')"> Water</td><td><input type="checkbox" class="checkForm" onclick="fillHiddenBoolFor(\'Area\')"> Area</td><td><input type="checkbox" class="checkForm" onclick="fillHiddenBoolFor(\'Height\')"> Height</td></tr></table>'


    function fillHiddenBoolFor(fieldName)
    {
        document.getElementById(fieldName).value = true;
    }

      //declare map and marker objects
      var map;
      var marker;

      //get the coordinates of the marker
      function getCoordinates() {
        var coords = marker.getPosition()
        alert(coords)

      }

      function CenterControl(controlDiv, map) {

          // Set CSS for the control border.
          var controlUI = document.createElement('div');
          controlUI.style.backgroundColor = '#fff';
          controlUI.style.border = '2px solid #fff';
          controlUI.style.borderRadius = '3px';
          controlUI.style.boxShadow = '0 2px 6px rgba(0,0,0,.3)';
          controlUI.style.cursor = 'pointer';
          controlUI.style.marginBottom = '22px';
          controlUI.style.textAlign = 'center';
          controlUI.title = 'Click to recenter the map';
          controlDiv.appendChild(controlUI);

          // Set CSS for the control interior.
          var controlText = document.createElement('div');
          controlText.style.color = 'rgb(25,25,25)';
          controlText.style.fontFamily = 'Roboto,Arial,sans-serif';
          controlText.style.fontSize = '16px';
          controlText.style.lineHeight = '38px';
          controlText.style.paddingLeft = '5px';
          controlText.style.paddingRight = '5px';
          controlText.innerHTML = checkboxesTable;
          controlUI.appendChild(controlText);

          // Create the DIV to hold the control and call the CenterControl()
          // constructor passing in this DIV.
          var centerControlDiv = document.createElement('div');
          var centerControl = new CenterControl(centerControlDiv, map);

          centerControlDiv.index = 1;
          map.controls[google.maps.ControlPosition.BOTTOM_CENTER].push(centerControlDiv);
      }

      function initMap() {
          infoWindow = new google.maps.InfoWindow();
          map = new google.maps.Map(document.getElementById('map'), {
              center: {lat: @Model.Latitude, lng: @Model.Longitude},
              zoom: 13,
              mapTypeId: google.maps.MapTypeId.ROADMAP
          });

          marker = new google.maps.Marker({
              position: {lat: @Model.Latitude, lng: @Model.Longitude},
              map: map
          });

      }


</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAHH2xW97a6O5sf8XvXxfxyBQet31lmlLQ&libraries=places&callback=initMap"
        async defer></script>

